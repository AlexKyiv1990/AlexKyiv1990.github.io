{"version":3,"sources":["components/NumberProvider.js","components/NumberButton.js","components/FunctionButton.js","components/ClearButtom.js","components/styles/Styles.js","components/Display.js","components/EqualButton.js","components/BackButton.js","components/NegativeBut.js","components/Calculater.js","App.js","index.js"],"names":["NumberContext","createContext","NumberProvider","props","useState","number","setNumber","storedNumber","setStoredNumber","functionType","setFunctionType","handleSetStoredValue","Provider","value","doMath","Math","round","parseFloat","handleBackButton","deletedNumber","slice","length","handleClearValue","handleSetCalcFunction","type","handleSetDisplayValue","num","includes","replace","handleToggleNegative","positiveNumber","children","CalculatorButton","buttonValue","useContext","onClick","FunctionButton","className","ClearButton","CalculatorStyles","styled","div","DisplayStyles","Display","undefined","EqualButton","BackButton","NegativeButton","Calculator","NegativeBut","NumberButton","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e055754.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\r\n\r\nexport const NumberContext = createContext();\r\n\r\nconst NumberProvider = props => {\r\n    const [number, setNumber] = useState('');\r\n    const [storedNumber, setStoredNumber] = useState('');\r\n    const [functionType, setFunctionType] = useState('');\r\n\r\n    const handleSetDisplayValue = num => {\r\n        if ((!number.includes('.') || num !== '.') && number.length < 8) {\r\n            setNumber(`${(number + num).replace(/^0+/, '')}`);\r\n        }\r\n    };\r\n\r\n    const handleSetStoredValue = () => {\r\n        setStoredNumber(number);\r\n        setNumber('');\r\n    };\r\n\r\n    const handleClearValue = () => {\r\n        setNumber('');\r\n        setStoredNumber('');\r\n        setFunctionType('');\r\n    };\r\n\r\n    const handleBackButton = () => {\r\n        if (number !== '') {\r\n            const deletedNumber = number.slice(0, number.length - 1);\r\n            setNumber(deletedNumber);\r\n        }\r\n    };\r\n\r\n    const handleSetCalcFunction = type => {\r\n        if (number) {\r\n            setFunctionType(type);\r\n            handleSetStoredValue();\r\n        }\r\n        if (storedNumber) {\r\n            setFunctionType(type);\r\n        }\r\n    };\r\n\r\n    const handleToggleNegative = () => {\r\n        if (number) {\r\n            if (number > 0) {\r\n                setNumber(`-${number}`);\r\n            } else {\r\n                const positiveNumber = number.slice(1);\r\n                setNumber(positiveNumber);\r\n            }\r\n        } else if (storedNumber > 0) {\r\n            setStoredNumber(`-${storedNumber}`);\r\n        } else {\r\n            const positiveNumber = storedNumber.slice(1);\r\n            setStoredNumber(positiveNumber);\r\n        }\r\n    };\r\n\r\n    const doMath = () => {\r\n        if (number && storedNumber) {\r\n            switch (functionType) {\r\n                case '+':\r\n                    setStoredNumber(`${Math.round(`${(parseFloat(storedNumber) + parseFloat(number)) * 1000}`) / 1000}`);\r\n                    break;\r\n                case '-':\r\n                    setStoredNumber(`${Math.round(`${(parseFloat(storedNumber) - parseFloat(number)) * 1000}`) / 1000}`);\r\n                    break;\r\n                case '/':\r\n                    setStoredNumber(`${Math.round(`${(parseFloat(storedNumber) / parseFloat(number)) * 1000}`) / 1000}`);\r\n                    break;\r\n                case '*':\r\n                    setStoredNumber(`${Math.round(`${parseFloat(storedNumber) * parseFloat(number) * 1000}`) / 1000}`);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            setNumber('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <NumberContext.Provider\r\n            value={{\r\n                doMath,\r\n                functionType,\r\n                handleBackButton,\r\n                handleClearValue,\r\n                handleSetCalcFunction,\r\n                handleSetDisplayValue,\r\n                handleSetStoredValue,\r\n                handleToggleNegative,\r\n                number,\r\n                storedNumber,\r\n                setNumber,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </NumberContext.Provider>\r\n    );\r\n};\r\n\r\nexport default NumberProvider;\r\n","import React, { useContext } from 'react';\r\nimport { NumberContext } from './NumberProvider';\r\n\r\nconst CalculatorButton = ({ buttonValue }) => {\r\n    const { handleSetDisplayValue } = useContext(NumberContext);\r\n    return (\r\n        <button type=\"button\" onClick={() => handleSetDisplayValue(buttonValue)}>\r\n            {buttonValue}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default CalculatorButton;\r\n","import React, { useContext } from 'react';\r\nimport { NumberContext } from './NumberProvider';\r\n\r\nconst FunctionButton = ({ buttonValue }) => {\r\n    const { handleSetCalcFunction } = useContext(NumberContext);\r\n    return (\r\n        <button className=\"function-button\" type=\"button\" onClick={() => handleSetCalcFunction(buttonValue)}>\r\n            {buttonValue}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default FunctionButton;\r\n","import React, { useContext } from 'react';\r\nimport { NumberContext } from './NumberProvider';\r\n\r\nconst ClearButton = () => {\r\n    const { handleClearValue } = useContext(NumberContext);\r\n    return (\r\n        <button type=\"button\" className=\"white-button\" onClick={() => handleClearValue()}>\r\n            C\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ClearButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const CalculatorStyles = styled.div`\r\n  background-color: darkgray;\r\n  width: 300px;\r\n  height: 500px;\r\n  min-height: auto;\r\n  margin: auto;\r\n  //min-height: 100vh;\r\n  display: grid;\r\n  border-radius: 25px;\r\n  border: black solid 1px;\r\n  justify-items: center;\r\n  grid-template-rows: minmax(200px 350px) 1fr;\r\n  grid-template-columns: 1fr;\r\n \r\n  .display {\r\n\r\n    width: 80%;\r\n   \r\n    h1 {\r\n      color: silver;\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  .number-pad {\r\n    display: grid;\r\n    grid-gap: 10px;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    padding: 0 0 30px;\r\n    width: 200px;\r\n    margin: 0 auto;\r\n\r\n    button {\r\n      width: 85%;\r\n      height: 40px;\r\n      border-radius: 15px;\r\n      border: 2px solid silver;\r\n      font-size: 1rem;\r\n      color: black;\r\n      background: cornflowerblue;\r\n\r\n      &:focus {\r\n        outline: none;\r\n      }\r\n\r\n      &:hover {\r\n        border: 3px solid darkgrey;\r\n        background: darkslateblue;\r\n      }\r\n    }\r\n\r\n    button.function-button {\r\n      background-color: #2a88e3;\r\n\r\n      &:hover {\r\n        border: 2px solid darkgrey;\r\n        background: darkslateblue;\r\n      }\r\n    }\r\n\r\n    button.white-button {\r\n      color: #2d3436;\r\n      background: #6691c5;\r\n\r\n      &:hover {\r\n        border: 2px solid darkgrey;\r\n        background: darkslateblue;\r\n      }\r\n    }\r\n  }\r\n\r\n  .zero-button {\r\n    grid-column: 1/3;\r\n  }\r\n`;\r\n\r\nexport const DisplayStyles = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 90px 50px;\r\n  grid-template-columns: 1fr;\r\n  border: 4px solid darkslateblue;\r\n  max-width: 700px;\r\n  margin: 10px auto;\r\n  align-items: center;\r\n  border-radius: 20px;\r\n  background: deepskyblue;\r\n  \r\n  h2,\r\n  p {\r\n    text-align: center;\r\n    color: black;\r\n  }\r\n  h2 {\r\n    font-size: 2.5rem;\r\n    margin: 0;\r\n    text-align: right;\r\n    border-bottom: 4px solid darkslateblue;\r\n    padding: 15px 20px;\r\n  }\r\n  h2.long-main-display {\r\n    font-size: 1.2rem;\r\n  }\r\n  p {\r\n    margin: 5px 0;\r\n    font-size: 1.3rem;\r\n  }\r\n  p.long-stored-display {\r\n    font-size: 0.5rem;\r\n  }\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { NumberContext } from './NumberProvider';\r\nimport { DisplayStyles } from './styles/Styles';\r\n\r\nconst Display = () => {\r\n    const { number, storedNumber, functionType } = useContext(NumberContext);\r\n    return (\r\n        <DisplayStyles>\r\n            <h2 className={storedNumber && storedNumber.length > 12 ? 'long-main-display' : undefined}>\r\n                {!number.length && !storedNumber ? '0' : number || storedNumber}\r\n            </h2>\r\n            <p className={storedNumber && storedNumber.length > 12 ? 'long-stored-display' : undefined}>\r\n                {!storedNumber ? 'ENTER SOME NUMBERS' : `${storedNumber} ${functionType} ${number}`}\r\n            </p>\r\n        </DisplayStyles>\r\n    );\r\n};\r\n\r\nexport default Display;\r\n","import React, { useContext } from 'react';\r\nimport { NumberContext } from './NumberProvider';\r\n\r\nconst EqualButton = () => {\r\n    const { doMath } = useContext(NumberContext);\r\n    return (\r\n        <button className=\"white-button\" type=\"button\" onClick={() => doMath()}>\r\n            =\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default EqualButton;\r\n","import React, { useContext } from 'react';\r\nimport { NumberContext } from './NumberProvider';\r\n\r\nconst BackButton = () => {\r\n    const { handleBackButton } = useContext(NumberContext);\r\n    return (\r\n        <button type=\"button\" className=\"white-button\" onClick={() => handleBackButton()}>\r\n            &#8592;\r\n            {/*&#8634;*/}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default BackButton;\r\n","import React, { useContext } from 'react';\r\nimport { NumberContext } from './NumberProvider';\r\n\r\nconst NegativeButton = () => {\r\n    const { handleToggleNegative } = useContext(NumberContext);\r\n    return (\r\n        <button type=\"button\" className=\"white-button\" onClick={() => handleToggleNegative()}>\r\n            -/+\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default NegativeButton;\r\n","import React from 'react';\r\nimport NumberButton from './NumberButton';\r\nimport FunctionButton from './FunctionButton';\r\nimport ClearButton from './ClearButtom';\r\nimport Display from './Display';\r\nimport EqualButton from './EqualButton';\r\nimport BackButton from './BackButton';\r\nimport NegativeButton from './NegativeBut';\r\nimport { CalculatorStyles } from './styles/Styles';\r\n\r\nconst Calculator = () => (\r\n    <CalculatorStyles>\r\n        <div className=\"display\">\r\n            <h1>myReactCalc</h1>\r\n            <Display />\r\n        </div>\r\n        <div className=\"number-pad\">\r\n            <ClearButton />\r\n            <BackButton />\r\n            <NegativeButton />\r\n            <FunctionButton buttonValue=\"/\" />\r\n            <NumberButton buttonValue={7} />\r\n            <NumberButton buttonValue={8} />\r\n            <NumberButton buttonValue={9} />\r\n            <FunctionButton buttonValue=\"*\" />\r\n            <NumberButton buttonValue={4} />\r\n            <NumberButton buttonValue={5} />\r\n            <NumberButton buttonValue={6} />\r\n            <FunctionButton buttonValue=\"-\" />\r\n            <NumberButton buttonValue={1} />\r\n            <NumberButton buttonValue={2} />\r\n            <NumberButton buttonValue={3} />\r\n            <FunctionButton buttonValue=\"+\" />\r\n            <div className=\"zero-button\">\r\n                <NumberButton buttonValue={0} />\r\n            </div>\r\n            <NumberButton buttonValue=\".\" />\r\n            <EqualButton />\r\n        </div>\r\n    </CalculatorStyles>\r\n);\r\n\r\nexport default Calculator;\r\n","import React from 'react';\n\nimport './App.css';\nimport Calculator from './components/Calculater';\nimport NumberProvider from './components/NumberProvider';\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <NumberProvider>\n        <Calculator/>\n      </NumberProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}